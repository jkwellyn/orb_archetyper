#!/usr/bin/env rake
require 'rubocop/rake_task'
require 'annotation_manager/rake_task'
require 'orb_logger'
require 'yard'
require 'test_support/tasks/spec_config'
require 'test_support/tasks/task_helpers'

RAKE_LOG ||= OrbLogger::OrbLogger.new
RAKE_LOG.progname = 'Rake Tasks'

YARD::Rake::YardocTask.new do |task|
  task.options = ['--output-dir=tmp/yard']
end

desc 'Run RuboCop on lib and spec directories, Gemfile, gemspec, Rakefile; Override with a space delimited list'
RuboCop::RakeTask.new(:rubocop, :pattern) do |task, args|
  task.patterns = ['lib/**/*.rb', 'spec/**/*.rb', 'Gemfile', '*.gemspec', 'Rakefile']
  task.patterns = args[:pattern].split(' ') if args[:pattern] # override default pattern
  RAKE_LOG.info("Running RuboCop against #{task.patterns}")
end

def build_rake_task(task_name)
  file_pattern = "<%= file_pattern %>"
  # only build the rake task if you find spec files
  return nil if Dir.glob(file_pattern).empty?
  RSpec::Core::RakeTask.new(task_name.to_sym) do |task|
    TestSupport::Tasks::TaskHelpers.build_rspec_opts(task_name, task)
    task.pattern = file_pattern
  end
end

namespace :spec do
  all_possible_tasks = <%= test_types %>
  actual_tasks = []
  all_possible_tasks.each do |task|
    task_added = build_rake_task(task)
    actual_tasks << "spec:#{task}" if task_added
  end

  task full: actual_tasks
end
